{"version":3,"sources":["app-extractor.js"],"names":[],"mappings":";;;8BAOI,OAAO,EAEE,YAAY;;;;;;;;;;;;;;;;;AAFrB,mBAAO,GAAG,MAAM,CAAC,OAAO;;AAEf,wBAAY;AAKV,yBALF,YAAY,CAKT,SAAS,EAAE;0CALd,YAAY;;AAOjB,wBAAI,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;;+CAER,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC;;;;AAA9D,wBAAI,CAAC,MAAM;AAAE,wBAAI,CAAC,KAAK;iBAC3B;;6BAVQ,YAAY;;2BAkBL,4BAAE;;;AAGd,8BAAM,CAAC,MAAM,CAAC;AACV,qCAAS,EAAE,IAAI;AACf,wCAAY,EAAE,OAAO;AACrB,0CAAc,EAAE;AACZ,uCAAO,EAAE,CAAC;6BACb;AACD,mCAAO,EAAC;AACJ,mCAAG,EAAE,IAAI,CAAC,IAAI,GAAG,OAAO;6BAC3B;yBACJ,CAAC,CAAC;;AAGH,+BAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM,EAAK;AACpC,mCAAO,MAAM,UAAO,CAAC,MAAK,MAAM,CAAC,CAAC,IAAI,CAAC,UAAA,CAAC,EAAE;AACtC,oCAAI,SAAS,GAAG,EAAE,CAAC;AACnB,qCAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAK,KAAK,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAC;AAChD,wCAAI,KAAK,GAAG,CAAC,CAAC,MAAK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,wCAAG,KAAK,CAAC,GAAG,EAAE,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;iCACvC;AACD,uCAAO,CAAC,SAAS,CAAC,CAAC;6BACtB,CAAC,CAAC;yBACN,CAAC,CAAC;qBAIN;;;uBA9CQ,YAAY","file":"app-extractor.js","sourceRoot":"/source/","sourcesContent":["import System from \"systemjs\";\r\n\r\nimport \"babel/polyfill\";\r\nimport * as path from \"path\";\r\nimport corejs from \"core-js\";\r\n\r\n\r\nvar Promise = corejs.Promise;\r\n\r\nexport class AppExtractor {\r\n\r\n    /**\r\n     * Configure systemjs to work with the local application\r\n     */\r\n    constructor(rootArray) {\r\n\r\n        this.path = path.dirname(rootArray);\r\n\r\n        [this.module, this.array] = path.basename(rootArray).split('.');\r\n    }\r\n\r\n    /**\r\n     * Gets the routes from a module.\r\n     * The module should export the routes array as a variable.\r\n     *\r\n     * @returns {Promise}\r\n     */\r\n    getNavFromRoutes(){\r\n\r\n        //prepare for use in windows\r\n        System.config({\r\n            \"baseURL\": \"./\",\r\n            \"transpiler\": 'babel',\r\n            \"babelOptions\": {\r\n                \"stage\": 0\r\n            },\r\n            \"paths\":{\r\n                \"*\": this.path + \"/*.js\"\r\n            }\r\n        });\r\n\r\n        //get routes from the aurelia application\r\n        return new Promise((resolve, reject) => {\r\n            return System.import(this.module).then(m=>{\r\n                var navRoutes = [];\r\n                for(var i = 0, l = m[this.array].length; i < l; i++){\r\n                    var route = m[this.array][i];\r\n                    if(route.nav) navRoutes.push(route);\r\n                }\r\n                resolve(navRoutes);\r\n            });\r\n        });\r\n\r\n\r\n\r\n    }\r\n}\r\n"]}