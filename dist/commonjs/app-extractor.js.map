{"version":3,"sources":["app-extractor.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;wBAAmB,UAAU;;;;QAEtB,gBAAgB;;oBACD,MAAM;;IAAhB,IAAI;;sBACG,SAAS;;;;AAG5B,IAAI,OAAO,GAAG,oBAAO,OAAO,CAAC;;IAEhB,YAAY;AAKV,aALF,YAAY,CAKT,SAAS,EAAE;8BALd,YAAY;;AAOjB,YAAI,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;;mCAER,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC;;;;AAA9D,YAAI,CAAC,MAAM;AAAE,YAAI,CAAC,KAAK;KAC3B;;iBAVQ,YAAY;;eAkBL,4BAAE;;;AAGd,kCAAO,MAAM,CAAC;AACV,yBAAS,EAAE,IAAI;AACf,4BAAY,EAAE,OAAO;AACrB,8BAAc,EAAE;AACZ,2BAAO,EAAE,CAAC;iBACb;AACD,uBAAO,EAAC;AACJ,uBAAG,EAAE,IAAI,CAAC,IAAI,GAAG,OAAO;iBAC3B;aACJ,CAAC,CAAC;;AAGH,mBAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM,EAAK;AACpC,uBAAO,+BAAa,CAAC,MAAK,MAAM,CAAC,CAAC,IAAI,CAAC,UAAA,CAAC,EAAE;AACtC,wBAAI,SAAS,GAAG,EAAE,CAAC;AACnB,yBAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAK,KAAK,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAC;AAChD,4BAAI,KAAK,GAAG,CAAC,CAAC,MAAK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,4BAAG,KAAK,CAAC,GAAG,EAAE,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;qBACvC;AACD,2BAAO,CAAC,SAAS,CAAC,CAAC;iBACtB,CAAC,CAAC;aACN,CAAC,CAAC;SAIN;;;WA9CQ,YAAY","file":"app-extractor.js","sourceRoot":"/source/","sourcesContent":["import System from \"systemjs\";\r\n\r\nimport \"babel/polyfill\";\r\nimport * as path from \"path\";\r\nimport corejs from \"core-js\";\r\n\r\n\r\nvar Promise = corejs.Promise;\r\n\r\nexport class AppExtractor {\r\n\r\n    /**\r\n     * Configure systemjs to work with the local application\r\n     */\r\n    constructor(rootArray) {\r\n\r\n        this.path = path.dirname(rootArray);\r\n\r\n        [this.module, this.array] = path.basename(rootArray).split('.');\r\n    }\r\n\r\n    /**\r\n     * Gets the routes from a module.\r\n     * The module should export the routes array as a variable.\r\n     *\r\n     * @returns {Promise}\r\n     */\r\n    getNavFromRoutes(){\r\n\r\n        //prepare for use in windows\r\n        System.config({\r\n            \"baseURL\": \"./\",\r\n            \"transpiler\": 'babel',\r\n            \"babelOptions\": {\r\n                \"stage\": 0\r\n            },\r\n            \"paths\":{\r\n                \"*\": this.path + \"/*.js\"\r\n            }\r\n        });\r\n\r\n        //get routes from the aurelia application\r\n        return new Promise((resolve, reject) => {\r\n            return System.import(this.module).then(m=>{\r\n                var navRoutes = [];\r\n                for(var i = 0, l = m[this.array].length; i < l; i++){\r\n                    var route = m[this.array][i];\r\n                    if(route.nav) navRoutes.push(route);\r\n                }\r\n                resolve(navRoutes);\r\n            });\r\n        });\r\n\r\n\r\n\r\n    }\r\n}\r\n"]}